{
  "hash": "ec12a28874c11b24adc3030f501023e9",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"{targets}\"\nsubtitle: \"An introduction to the package targets\"\nexecute: \n  eval: true\nformat: \n  revealjs:\n    center: true\n    hash-type: number\n    highlight-style: a11y\n    code-line-numbers: false\n---\n\n---\n\n{targets} is pipeline tool.\n\nThis means it coordinates your data analysis projects.\n\n---\n\nData analysis can be slow and repetitive\n\nLaunch the code.\nWait while it runs.\nDiscover an issue.\nRestart from scratch.\n\n::: {.r-stack}\n\n:::{.fragment width=\"450\" height=\"300\"}\n\n```{dot}\ndigraph G {\n    rankdir=LR;\n    node [shape = box style=rounded color=transparent]\n    edge [color=transparent]\n    {\n        A[label=\"Restart from scratch\" color=black]\n        B[label=\"Launch the code\" fontcolor=transparent]\n        C[label=\"Discover an issue\" fontcolor=transparent]\n        D[label=\"Wait while it runs\" fontcolor=transparent]\n    }\n    A -> B [color=transparent]\n    A -> C [dir=back color=transparent]\n    B -> D [color=transparent]\n    C -> D [dir=back color=transparent]\n}\n```\n\n:::\n\n:::{.fragment width=\"450\" height=\"300\"}\n\n```{dot}\ndigraph G {\n    rankdir=LR;\n    node [shape = box style=rounded color=transparent]\n    edge [color=transparent]\n    {\n        A[label=\"Restart from scratch\" color=black]\n        B[label=\"Launch the code\" color=black]\n        C[label=\"Discover an issue\" fontcolor=transparent]\n        D[label=\"Wait while it runs\" fontcolor=transparent]\n    }\n    A -> B [color=black]\n    A -> C [dir=back color=transparent]\n    B -> D [color=transparent]\n    C -> D [dir=back color=transparent]\n}\n```\n\n:::\n\n:::{.fragment width=\"450\" height=\"300\"}\n\n```{dot}\ndigraph G {\n    rankdir=LR;\n    node [shape = box style=rounded color=transparent]\n    edge [color=transparent]\n    {\n        A[label=\"Restart from scratch\" color=black]\n        B[label=\"Launch the code\" color=black]\n        C[label=\"Discover an issue\" fontcolor=transparent]\n        D[label=\"Wait while it runs\" color=black]\n    }\n    A -> B [color=black]\n    A -> C [dir=back color=transparent]\n    B -> D [color=black]\n    C -> D [dir=back color=transparent]\n}\n```\n\n:::\n\n:::{.fragment width=\"450\" height=\"300\"}\n\n```{dot}\ndigraph G {\n    rankdir=LR;\n    node [shape = box style=rounded color=transparent]\n    edge [color=transparent]\n    {\n        A[label=\"Restart from scratch\" color=black]\n        B[label=\"Launch the code\" color=black]\n        C[label=\"Discover an issue\" color=black]\n        D[label=\"Wait while it runs\" color=black]\n    }\n    A -> B [color=black]\n    A -> C [dir=back color=transparent]\n    B -> D [color=black]\n    C -> D [dir=back color=black]\n}\n```\n\n:::\n\n:::{.fragment width=\"450\" height=\"300\"}\n\n```{dot}\ndigraph G {\n    rankdir=LR;\n    {\n    node [shape = box style=rounded]\n        A[label=\"Restart from scratch\" ]\n        B[label=\"Launch the code\"]\n        C[label=\"Discover an issue\"]\n        D[label=\"Wait while it runs\"]\n    }\n    A -> B\n    A -> C [dir=back]\n    B -> D\n    C -> D [dir=back]\n}\n```\n\n:::\n\n:::{.fragment width=\"450\" height=\"300\"}\n\n```{dot}\ndigraph G {\n    rankdir=LR;\n    node [shape = box style=rounded color=transparent]\n    edge [color=transparent]\n    {\n        A[label=\"Restart from scratch\" color=black]\n        B[label=\"Launch the code\" fontcolor=transparent]\n        C[label=\"Discover an issue\" fontcolor=transparent]\n        D[label=\"Wait while it runs\" fontcolor=transparent]\n    }\n    A -> B [color=transparent]\n    A -> C [dir=back color=transparent]\n    B -> D [color=transparent]\n    C -> D [dir=back color=transparent]\n}\n```\n\n:::\n\n:::\n\n\n```{js}\ndocument.addEventListener('DOMContentLoaded', function() {\n  const fragments = document.querySelectorAll('.fragment');\n  let currentFragmentIndex = 0;\n  setInterval(() => {\n    fragments[currentFragmentIndex].style.display = 'none';\n    currentFragmentIndex = (currentFragmentIndex + 1) % fragments.length;\n    fragments[currentFragmentIndex].style.display = 'block';\n  }, 2000); // Adjust the interval (in milliseconds) for the animation speed\n});\n```\n\n",
    "supporting": [
      "intro-targets_files"
    ],
    "filters": [],
    "includes": {}
  }
}